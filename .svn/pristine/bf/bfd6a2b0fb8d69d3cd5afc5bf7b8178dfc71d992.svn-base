package db61b;

import static org.junit.Assert.*;

import java.util.ArrayList;

import org.junit.Test;

public class TableTest {

	@Test
	public void testBasics() {
		//testing constructor(takes in String[])
		/*String[] colTitles = new String[]{"a", "a", "c", "d"};
		Table t = new Table(colTitles); //should throw error at duplicate*/
		String[] colTitles = new String[]{"a", "b", "c", "d"};
		Table t = new Table(colTitles);
		
		//testing constructor(takes in List<String>
		ArrayList<String> lst = new ArrayList<String>();
		lst.add("cat");
		lst.add("dog");
		lst.add("mouse");
		Table t1 = new Table(lst);
		
		//testing columns() --> returns size
		assertEquals(4, t.columns());
		assertEquals(3, t1.columns());
		
		//testing getTitle(k)
		assertEquals("a", t.getTitle(0));
		assertEquals("d", t.getTitle(3));
		assertEquals("cat", t1.getTitle(0));
		assertEquals("dog", t1.getTitle(1));
		
		//testing findColumn(String s) returns number of column
		assertEquals(1, t.findColumn("b"));
		assertEquals(3, t.findColumn("d"));
		assertEquals(2, t1.findColumn("mouse"));
		assertEquals(0, t1.findColumn("cat"));
		
		//testing row operations
		//testing add(row) and size() which returns number of rows in the table
		Row toAdd = new Row(new String[]{"Clark", "Maharbiz", "dog", "cat", "sex"});//constructor 1, takes in String[]
		//note table t has columnTitles of length 4, so trying to add Row toAdd to "T" should return false
		assertEquals(false, t.add(toAdd));
		Row toAdd1 = new Row(new String[]{"Clark", "Maharbiz", "dog", "cat"});
		assertEquals(true, t.add(toAdd1));
	}
	

	/**
	 * readTable(String name) reads the contents of name.db and returns it as a table
	 */

	Table t = Table.readTable("enrolled");
	@Test
	public void testReadTable() {
		assertEquals(t.getTitle(0), "SID");
		assertEquals(t.getTitle(2), "Grade");
		assertEquals(t.size(), 19);//number of rows not including column titles
		assertEquals(t.findColumn("CCN"), 1);
		//try to do readTable with a file that doesn't exist
		boolean fileNotExist = false;
		try {
			Table t1 = Table.readTable("unicorns");
		} catch(DBException e) {
			fileNotExist = true;
		}
		assertTrue(fileNotExist);
	}
	
	/**
	 * Writes the content of the Table (this) into Name.db.
	 */
	@Test
	public void testWriteTable() {
		System.out.println("testing enroll Write Table");//t is from Table.readTable("enrolled")
		t.writeTable("enrollWT");	
		
		System.out.println();
		Table t1 = Table.readTable("students");
		System.out.println("testing students Write Table...");
		t1.writeTable("studentsWT");
	}
	
	@Test
	public void testPrintTable() {
		Table t = new Table(new String[]{"Name", "Surname", "Grade"});
        Row a = new Row(new String[]{"Jason", "Knowles", "B"});
        Row b = new Row(new String[]{"Shana", "Brown", "B+"});
        Row c = new Row(new String[]{"Yangfan", "Chan", "B"});
        Row d = new Row(new String[]{"Valerie", "Chan", "B+"});
        t.add(a);
        t.add(b);
        t.add(c);
        t.add(d);
        System.out.println("testing Table Print()...");
        t.print();
        System.out.println();
        Table t1 = Table.readTable("students");
        t1.print();
	}

}
